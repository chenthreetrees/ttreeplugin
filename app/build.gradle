apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.threetree.ttreeplugin"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile project(":pluginutil")
}


buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        classpath 'com.threetrees.plugin:plugin:1.0.0'
    }
}

apply plugin: 'ttreeplugin'

import com.threetrees.plugin.asm.AutoMethodVisitor
import org.objectweb.asm.MethodVisitor
import org.objectweb.asm.Opcodes

ttree {
    isDebug = true
    //具体配置
    matchData = [
//            'AnnotationPath' : 'com.threetree.ttreeplugin.annotation',
//            'AnnotationReceiver' : 'com.threetree.ttreeplugin.MyReceiver',
//            'ClassReceiver' : 'com.threetree.ttreeplugin.MyReceiver',
            'ClassFilter'  : [
                    //根据类型匹配
                    ['ClassName' : 'com/threetree/ttreeplugin/MainActivity',
                     'MethodName': 'testClassName', 'MethodDes': '()V'],
                    //根据类型匹配
                    ['ClassName' : 'com/threetree/ttreeplugin/MainActivity',
                     'MethodName': 'testBoolean', 'MethodDes': '(Z)V'],
                    //根据关键字匹配
                    ['ContainName' : 'Activity',
                     'MethodName': 'testContainName', 'MethodDes': '(Ljava/lang/String;)V'],
                    //根据接口名匹配
                    ['InterfaceName': 'android/view/View$OnClickListener',
                     'MethodName': 'onClick', 'MethodDes': '(Landroid/view/View;)V'],
                    //根据类型匹配,外部配置覆盖
                    ['ClassName' : 'com/threetree/ttreeplugin/MainActivity',
                     'MethodName': 'testOverride', 'MethodDes': '()V', 'Override' : true],
                    //根据类型匹配，拦截方法
                    ['ClassName' : 'com/threetree/ttreeplugin/MainActivity',
                     'MethodName': 'testInterceptForClass', 'MethodDes': '()I']
            ],
            //插入的字节码，方法的执行顺序visitAnnotation->onMethodEnter->onMethodExit
            'MethodVisitor': {
                MethodVisitor mv, int access, String name, String desc, String className ->
                    AutoMethodVisitor adapter = new AutoMethodVisitor(mv, access, name, desc, className) {
                        @Override
                        protected void onMethodEnter() {
                            super.onMethodEnter();
                            if("testOverride".equals(name))
                            {

                                mv.visitLdcInsn(name)
                                mv.visitLdcInsn("========start=========")
                                mv.visitMethodInsn(Opcodes.INVOKESTATIC, "android/util/Log", "e", "(Ljava/lang/String;Ljava/lang/String;)I", false)
                            }
                        }

                        @Override
                        protected void onMethodExit(int opcode) {
                            super.onMethodExit(opcode)
                        }
                    }
                    return adapter
            }
    ]
}

